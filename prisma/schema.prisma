// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  wallet    UserWallet?
  apiCalls  ApiCall[]
  libraries Library[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserWallet {
  id String @id @default(cuid())

  userId String @unique
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)

  type UserWalletType

  address String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserWalletType {
  EOA
  SOCIAL
}

model ApiCall {
  id String @id @default(cuid())

  userId String
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)

  query    String
  schema   Json
  response Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Library {
  id String @id @default(cuid())

  name        String @unique
  description String

  userId String
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)

  query  String
  schema Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
